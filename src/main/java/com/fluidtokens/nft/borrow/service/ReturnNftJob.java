package com.fluidtokens.nft.borrow.service;

import co.nstant.in.cbor.model.ByteString;
import com.bloxbean.cardano.client.account.Account;
import com.bloxbean.cardano.client.address.AddressProvider;
import com.bloxbean.cardano.client.address.Credential;
import com.bloxbean.cardano.client.api.exception.ApiException;
import com.bloxbean.cardano.client.api.model.Result;
import com.bloxbean.cardano.client.api.model.Utxo;
import com.bloxbean.cardano.client.backend.blockfrost.service.BFBackendService;
import com.bloxbean.cardano.client.common.model.Networks;
import com.bloxbean.cardano.client.function.helper.SignerProviders;
import com.bloxbean.cardano.client.plutus.spec.BigIntPlutusData;
import com.bloxbean.cardano.client.plutus.spec.ConstrPlutusData;
import com.bloxbean.cardano.client.plutus.spec.PlutusV2Script;
import com.bloxbean.cardano.client.quicktx.QuickTxBuilder;
import com.bloxbean.cardano.client.quicktx.ScriptTx;
import com.bloxbean.cardano.client.transaction.spec.Transaction;
import com.bloxbean.cardano.client.util.HexUtil;
import com.fluidtokens.nft.borrow.client.FluidtokensApi;
import lombok.AllArgsConstructor;
import lombok.SneakyThrows;
import lombok.extern.slf4j.Slf4j;
import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.stereotype.Service;

import java.util.concurrent.TimeUnit;

@Service
@Slf4j
@AllArgsConstructor
public class ReturnNftJob implements Runnable {

    private static final String FLUIDTOKENS_SCRIPTS_BYTES = "";
    private static final String SCRIPT_REF_INPUT_HASH = "2c812d5ba6d240eea79dca528f22a3854adcaac140f3151ecbcf5d945c5981e3";
    private static final int SCRIPT_REF_INPUT_INDEX = 0;

    private final Account account;

    private final BFBackendService bfBackendService;

    private final FluidtokensApi fluidtokensApi;

    private final DatumService service;

    @SneakyThrows
    @Override
    @Scheduled(timeUnit = TimeUnit.MINUTES, initialDelay = 2, fixedDelay = 15)
    public void run() {

        log.info("Running");

        var expiredRents = fluidtokensApi.getExpiredRents();
        log.info("found {} expired rents", expiredRents.size());

        if (!expiredRents.isEmpty()) {

            // Loading Script
            var poolScript = PlutusV2Script.deserialize(new ByteString(HexUtil.decodeHexString(FLUIDTOKENS_SCRIPTS_BYTES)));

            var paymentCredentials = Credential.fromScript(poolScript.getScriptHash());

            final ScriptTx scriptTx = new ScriptTx()
                    .readFrom(SCRIPT_REF_INPUT_HASH, SCRIPT_REF_INPUT_INDEX);

            for (int i = 0; i < expiredRents.size(); i++) {
                var rent = expiredRents.get(i);
                final var j = i;

                var rentUtxo = rent.rentUtxoId();
                var utxoParts = rentUtxo.split("#");
                var utxoHash = utxoParts[0];
                var utxoIndex = Integer.parseInt(utxoParts[1]);

                try {
                    Result<Utxo> txOutputResult = bfBackendService.getUtxoService().getTxOutput(utxoHash, utxoIndex);
                    Utxo utxo = txOutputResult.getValue();

                    String inlineDatum = utxo.getInlineDatum();

                    var stakingAddress = rent.rentData().renterAddress().get(1);
                    var delegationCredentials = Credential.fromKey(stakingAddress);

                    var addressOwner = AddressProvider.getBaseAddress(paymentCredentials, delegationCredentials, Networks.mainnet());

                    service.getNewDatum(inlineDatum)
                            .ifPresent(newDatum -> {
                                scriptTx.collectFrom(utxo, ConstrPlutusData.of(4, BigIntPlutusData.of(j)));
                                scriptTx.payToContract(addressOwner.getAddress(), utxo.getAmount(), newDatum);
                            });

                } catch (ApiException e) {
                    throw new RuntimeException(e);
                }

            }

            scriptTx.withChangeAddress(account.baseAddress());

            QuickTxBuilder quickTxBuilder = new QuickTxBuilder(bfBackendService);

            var slot = bfBackendService.getBlockService().getLatestBlock().getValue().getSlot();

             quickTxBuilder
                    .compose(scriptTx)
                    .withSigner(SignerProviders.signerFrom(account))
                    .validFrom(slot - 120L)
                    .validTo(slot + 600L)
                    .feePayer(account.baseAddress())
                    .completeAndWait();

        }

        log.info("Completed");

    }
}
